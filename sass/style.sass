$w: 33vw
$inputUIw: calc(#{$w} * 1.1)
$gameUIw: calc(#{$w} * 1.08)

$breakpoints: ("phone":400px,"phone-wide":480px,"phablet":560px,"tablet-small": 640px,"tablet":768px,"tablet-wide":1024px,"desktop":1248px,"desktop-wide": 1440px)

@mixin mq($width, $type: min)
  @if map_has_key($breakpoints, $width)
    $width: map_get($breakpoints, $width)
    @if $type == max
      $width: $width - 1px
    @media only screen and (#{$type}-width: $width)
      @content

%center
  position: absolute
  top: 50%
  left: 50%
  transform: translate(-50%,-50%)
  
@mixin button($p1,$p2,$fs)
  background-color: black
  color: #fff
  border: none
  font-size: $fs
  padding: $p1 $p2
  border-radius: 0.4em
  
*
  // border: solid 1px
  box-sizing: border-box
  text-align: center
  position: relative
  transition: all 1s
  font-family: Varela Round

html,body
  height: 100vh
  margin: 0
  overflow: hidden
  
.inputUI
  @extend %center
  display: flex
  flex-wrap: wrap
  justify-content: space-around
  width: $inputUIw
  animation: fadeIn 1s 1
  z-index: 2
  & label
    width: 50%
    padding: 0.3em
    transition: all 0.3s
    border-radius: 0.5em 0.5em 0 0
    cursor: pointer
  & .box
    animation: fadeIn 1s 1
    width: 100%
    display: flex
    flex-wrap: wrap
    justify-content: space-around
    height: $inputUIw
    & p
      background-color: black
      color: white
      width: 100%
      height: 22%
      padding: 0.5em 1em
      // border-radius: 0 1em
      margin: 0
    & label
      display: block
      width: 50%
      margin: 0
      height: 50%
    & .circleBox, .crossBox
      width: 50%
      height: 100%
      margin: 0
      & .symbolBox
        height: 50%
        & .cross, .circle
          @extend %center
          width: 100%
          height: 100%
          transition: all 0.2s
          &:hover
            color: gold
      & input[type="text"]
        width: 70%
        margin: 0em auto
  & input[type="text"]
    border-radius: 0.4em
    width: 50%
    height: 2em
    transform: translateY(-20%)
    justify-content: space-around
    border: solid 1px black
  & input[type="submit"]
    cursor: pointer
    +button(0.4em,2.5em,1.2em)
    &:hover
      color: gold
      
.gameUI
  @extend %center
  & h1
    font-family: Unica One
    font-size: 2.5em
  & .box
    width: $gameUIw
    display: flex
    flex-wrap: wrap
    & .symbol
      width: calc(#{$gameUIw} / 3)
      height: calc(#{$gameUIw} / 3)
      cursor: pointer
    & p
      margin-left: auto
      margin-right: auto
      cursor: pointer

  & .hint
    position: absolute
    width: calc((#{$w} - 0.4vw) / 4)
    height: calc((#{$w} - 0.4vw) / 4)
    transform: translate(-150%,90%)
    color: gold
    
    // position: relative
    // margin: 0.1em auto
    // transform: translate(0%)
  
.congratulate
  @extend %center
  perspective: 5000px
  z-index: 2
  animation: fadeIn 1s 1
  & .result
    transform-style: preserve-3d
    & span
      color: orange
      transform: rotateY(70deg)
      animation: rotate 2s 1
      animation-fill-mode: forwards
      font-size: 2em
  & button
    margin-top: 1em
    +button(0.3em,2em,1.2em)
    &:hover
      color: gold
    
      
@keyframes rotate
  0%
    transform: rotateY(180deg)
  100%
    transform: rotateY(0deg)
  
/*------circle, cross------*/

.circle
  &:after
    animation: fadeIn 0.3s 1
    content: ""
    border: solid 15px
    @extend %center
    width: 40%
    height: 40%
    border-radius: 10em

.cross
  &:before
    animation: fadeIn 0.3s 1
    content: ""
    border: solid 8px
    @extend %center
    height: 0
    width: 60%
    transform-origin: 50% 50%
    transform: translate(-50%,-50%) rotate(45deg) 
    border-radius: 0
  &:after
    animation: fadeIn 0.3s 1
    content: ""
    border: solid 8px
    @extend %center
    height: 0
    width: 60%
    transform: translate(-50%,-50%) rotate(-44deg)
    transform-origin: 50% 50%
    border-radius: 0



/*-----congratulate----*/
span
// span flip animation

@for $i from 1 through 9
  @if $i % 3 == 1
    .symbol:nth-child(#{$i})
      border-right: dashed 2px
    
@for $i from 1 through 9
  @if $i % 3 == 2
    .symbol:nth-child(#{$i})
      border-right: dashed 2px
    
@for $i from 1 through 6
  .symbol:nth-child(#{$i})
    border-bottom: dashed 2px
  
  
@keyframes fadeIn
  0%
    opacity: 0
  100%
    opacity: 1
  
input[type="radio"]
  display: none




#multi
  &:checked + label
    background-color: gold
  &:checked ~ .singleBox
    display: none

#single
  &:checked + label
    background-color: gold
  &:checked ~ .multiBox
    display: none
      
#singleCircle:checked + label:after
  color: gold
  
#singleCross
  &:checked + label:after
    color: gold
  &:checked + label:before
    color: gold
  
// phases
#inputting
  &:checked ~ .gameUI
    filter: blur(2px)
  &:checked ~ .congratulate
    display: none
  
#playing
  &:checked ~ .inputUI
    display: none
  &:checked ~ .gameUI
    filter: blur(0)
  &:checked ~ .congratulate
    display: none
    
#showingResult
  &:checked ~ .inputUI
    display: none
  &:checked ~ .gameUI
    filter: blur(2px)
    
+mq('phone-wide',max)
  $w: 80vw
  $inputUIw: calc(#{$w} * 1.1)
  $gameUIw: calc(#{$w} * 1.1)

  html,body
    height: 90vh
    min-height: 90vh
  .inputUI
    width: $inputUIw
    & .box
      height: $inputUIw
  .gameUI
    & .box
      width: $gameUIw
      & .symbol
        width: calc(#{$gameUIw} / 3)
        height: calc(#{$gameUIw} / 3)
    & h1
      margin: 0.3em auto
    & .hint
      position: relative
      margin: 0.1em auto
      // margin-bottom: .5em
      transform: translate(0%)
      width: calc(#{$gameUIw} / 3)
      height: calc(#{$gameUIw} / 3)
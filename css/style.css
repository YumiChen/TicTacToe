.inputUI, .inputUI .box .circleBox .symbolBox .cross, .inputUI .box .circleBox .symbolBox .circle, .inputUI .box .crossBox .symbolBox .cross, .inputUI .box .crossBox .symbolBox .circle, .gameUI, .congratulate, .circle:after, .cross:before, .cross:after {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

* {
  box-sizing: border-box;
  text-align: center;
  position: relative;
  transition: all 1s;
  font-family: Varela Round;
}

html, body {
  height: 100vh;
  margin: 0;
  overflow: hidden;
}

.inputUI {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  width: calc(33vw * 1.1);
  animation: fadeIn 1s 1;
  z-index: 2;
}
.inputUI label {
  width: 50%;
  padding: 0.3em;
  transition: all 0.3s;
  border-radius: 0.5em 0.5em 0 0;
  cursor: pointer;
}
.inputUI .box {
  animation: fadeIn 1s 1;
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  height: calc(33vw * 1.1);
}
.inputUI .box p {
  background-color: black;
  color: white;
  width: 100%;
  height: 22%;
  padding: 0.5em 1em;
  margin: 0;
}
.inputUI .box label {
  display: block;
  width: 50%;
  margin: 0;
  height: 50%;
}
.inputUI .box .circleBox, .inputUI .box .crossBox {
  width: 50%;
  height: 100%;
  margin: 0;
}
.inputUI .box .circleBox .symbolBox, .inputUI .box .crossBox .symbolBox {
  height: 50%;
}
.inputUI .box .circleBox .symbolBox .cross, .inputUI .box .circleBox .symbolBox .circle, .inputUI .box .crossBox .symbolBox .cross, .inputUI .box .crossBox .symbolBox .circle {
  width: 100%;
  height: 100%;
  transition: all 0.2s;
}
.inputUI .box .circleBox .symbolBox .cross:hover, .inputUI .box .circleBox .symbolBox .circle:hover, .inputUI .box .crossBox .symbolBox .cross:hover, .inputUI .box .crossBox .symbolBox .circle:hover {
  color: gold;
}
.inputUI .box .circleBox input[type="text"], .inputUI .box .crossBox input[type="text"] {
  width: 70%;
  margin: 0em auto;
}
.inputUI input[type="text"] {
  border-radius: 0.4em;
  width: 50%;
  height: 2em;
  transform: translateY(-20%);
  justify-content: space-around;
  border: solid 1px black;
}
.inputUI input[type="submit"] {
  cursor: pointer;
  background-color: black;
  color: #fff;
  border: none;
  font-size: 1.2em;
  padding: 0.4em 2.5em;
  border-radius: 0.4em;
}
.inputUI input[type="submit"]:hover {
  color: gold;
}

.gameUI h1 {
  font-family: Unica One;
  font-size: 2.5em;
}
.gameUI .box {
  width: calc(33vw * 1.08);
  display: flex;
  flex-wrap: wrap;
}
.gameUI .box .symbol {
  width: calc(calc(33vw * 1.08) / 3);
  height: calc(calc(33vw * 1.08) / 3);
  cursor: pointer;
}
.gameUI .box p {
  margin-left: auto;
  margin-right: auto;
  cursor: pointer;
}
.gameUI .hint {
  position: absolute;
  width: calc((33vw - 0.4vw) / 4);
  height: calc((33vw - 0.4vw) / 4);
  transform: translate(-150%, 90%);
  color: gold;
}

.congratulate {
  perspective: 5000px;
  z-index: 2;
  animation: fadeIn 1s 1;
}
.congratulate .result {
  transform-style: preserve-3d;
}
.congratulate .result span {
  color: orange;
  transform: rotateY(70deg);
  animation: rotate 2s 1;
  animation-fill-mode: forwards;
  font-size: 2em;
}
.congratulate button {
  margin-top: 1em;
  background-color: black;
  color: #fff;
  border: none;
  font-size: 1.2em;
  padding: 0.3em 2em;
  border-radius: 0.4em;
}
.congratulate button:hover {
  color: gold;
}

@keyframes rotate {
  0% {
    transform: rotateY(180deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}
/*------circle, cross------ */
.circle:after {
  animation: fadeIn 0.3s 1;
  content: "";
  border: solid 15px;
  width: 40%;
  height: 40%;
  border-radius: 10em;
}

.cross:before {
  animation: fadeIn 0.3s 1;
  content: "";
  border: solid 8px;
  height: 0;
  width: 60%;
  transform-origin: 50% 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  border-radius: 0;
}
.cross:after {
  animation: fadeIn 0.3s 1;
  content: "";
  border: solid 8px;
  height: 0;
  width: 60%;
  transform: translate(-50%, -50%) rotate(-44deg);
  transform-origin: 50% 50%;
  border-radius: 0;
}

/*-----congratulate---- */
.symbol:nth-child(1) {
  border-right: dashed 2px;
}

.symbol:nth-child(4) {
  border-right: dashed 2px;
}

.symbol:nth-child(7) {
  border-right: dashed 2px;
}

.symbol:nth-child(2) {
  border-right: dashed 2px;
}

.symbol:nth-child(5) {
  border-right: dashed 2px;
}

.symbol:nth-child(8) {
  border-right: dashed 2px;
}

.symbol:nth-child(1) {
  border-bottom: dashed 2px;
}

.symbol:nth-child(2) {
  border-bottom: dashed 2px;
}

.symbol:nth-child(3) {
  border-bottom: dashed 2px;
}

.symbol:nth-child(4) {
  border-bottom: dashed 2px;
}

.symbol:nth-child(5) {
  border-bottom: dashed 2px;
}

.symbol:nth-child(6) {
  border-bottom: dashed 2px;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
input[type="radio"] {
  display: none;
}

#multi:checked + label {
  background-color: gold;
}
#multi:checked ~ .singleBox {
  display: none;
}

#single:checked + label {
  background-color: gold;
}
#single:checked ~ .multiBox {
  display: none;
}

#singleCircle:checked + label:after {
  color: gold;
}

#singleCross:checked + label:after {
  color: gold;
}
#singleCross:checked + label:before {
  color: gold;
}

#inputting:checked ~ .gameUI {
  filter: blur(2px);
}
#inputting:checked ~ .congratulate {
  display: none;
}

#playing:checked ~ .inputUI {
  display: none;
}
#playing:checked ~ .gameUI {
  filter: blur(0);
}
#playing:checked ~ .congratulate {
  display: none;
}

#showingResult:checked ~ .inputUI {
  display: none;
}
#showingResult:checked ~ .gameUI {
  filter: blur(2px);
}

@media only screen and (max-width: 479px) {
  html, body {
    height: 90vh;
    min-height: 90vh;
  }

  .inputUI {
    width: calc(80vw * 1.1);
  }
  .inputUI .box {
    height: calc(80vw * 1.1);
  }

  .gameUI .box {
    width: calc(80vw * 1.1);
  }
  .gameUI .box .symbol {
    width: calc(calc(80vw * 1.1) / 3);
    height: calc(calc(80vw * 1.1) / 3);
  }
  .gameUI h1 {
    margin: 0.3em auto;
  }
  .gameUI .hint {
    position: relative;
    margin: 0.1em auto;
    transform: translate(0%);
    width: calc(calc(80vw * 1.1) / 3);
    height: calc(calc(80vw * 1.1) / 3);
  }
}
